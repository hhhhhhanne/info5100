/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.EnterpriseRole;

import Business.Account.Account;
import Business.Business;
import Business.Enterprise.Agent;
import Business.Enterprise.Enterprise;
import Business.Enterprise.Enterprise.EnterpriseType;
import Business.Enterprise.FoodBank;
import Business.Organization.Organization;
import Business.Organization.Organization.OrganizationType;
import Business.Person.P;
import Business.Person.Person;
import Business.Role.AgentRole;
import Business.Role.InventoryRole;
import Business.Role.Role;
import Business.Role.ServiceRole;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chance
 */
public class ManageOrganizationAccountJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageAccount
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private Business system;
    public ManageOrganizationAccountJPanel(JPanel userProcessContainer, Business system, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.system = system;
        this.populateComboBox();
        if(this.agentJComboBox.getSelectedItem() != null) {
            this.populateTabel();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        accountJTabel = new javax.swing.JTable();
        txtUsername = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        employeeComboBox = new javax.swing.JComboBox<>();
        btnDelete = new javax.swing.JButton();
        txtTitle = new javax.swing.JLabel();
        agentJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();

        accountJTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Employee", "UserName"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(accountJTabel);

        btnCreate.setText("Create Account");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setText("Username:");

        jLabel3.setText("Password");

        jLabel4.setText("Employee:");

        btnDelete.setText("Delete Account");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtTitle.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        txtTitle.setText("Manage Account");

        agentJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agentJComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel2.setText("Organization");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(employeeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack)
                    .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49))
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTitle)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(agentJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(agentJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(employeeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCreate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack))
                .addContainerGap(96, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        String username = this.txtUsername.getText();
        String password = this.txtPassword.getText();
        Organization selectedOrg = (Organization)this.agentJComboBox.getSelectedItem();
        
        if(username.equals("") || password.equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill the input.");
            return;
        }
        if(this.agentJComboBox.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Please select a enterprise or organization");
            return;
        }
        Person selectPerson = (Person)this.employeeComboBox.getSelectedItem();
        
        Role selectedRole = null;
        if(selectedOrg.getOrgType() == OrganizationType.Inventory) {
            selectedRole = new InventoryRole();
        }
        if(selectedOrg.getOrgType() == OrganizationType.Service) {
            selectedRole = new ServiceRole();
        }
        
        Account newSystemAcc = this.system.getAccountDirectory().addAccount(username, password, selectedRole, selectPerson);
        if(newSystemAcc == null) {
            return ;
        }
        selectedOrg.getAccountDirectory().addAccount(newSystemAcc);
        JOptionPane.showMessageDialog(null, "New Employee under " + selectedOrg + " has been created.");
        this.populateTabel();
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int index = this.accountJTabel.getSelectedRow();
        if(index < 0) {
            JOptionPane.showMessageDialog(null, "Please select one Enterprise from table", "Warning", JOptionPane.ERROR_MESSAGE);
            return ;
        }
        Account selectAcc = (Account)accountJTabel.getValueAt(index, 2);
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to delete the User: "+ selectAcc +"?", "Warning", dialogButton);
        if(dialogResult == JOptionPane.YES_OPTION) {
            this.system.getAccountDirectory().deleteAccount(selectAcc);
            Organization selectedOrg = (Organization)this.agentJComboBox.getSelectedItem();
            selectedOrg.getAccountDirectory().deleteAccount(selectAcc);
        }
        //this.system.getAccDirectory().deleteAccount(selectAcc);
        this.populateTabel();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void agentJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agentJComboBoxActionPerformed
        if(this.agentJComboBox.getSelectedItem() != null) {
            this.populateTabel();
            this.populateEmployee();
        }
    }//GEN-LAST:event_agentJComboBoxActionPerformed

    public void populateTabel() {
        DefaultTableModel model = (DefaultTableModel) accountJTabel.getModel();
        model.setRowCount(0);
        Organization selectedOrg = (Organization)this.agentJComboBox.getSelectedItem();
        for(Account acc: selectedOrg.getAccountDirectory().getAccountCatalog()) {
            Object[] row = new Object[3];
            row[0] = acc.getAccId();
            row[1] = acc.getPerson().getName();
            row[2] = acc;
            model.addRow(row);
        }
    }
    
    public void populateEmployee() {
        Organization selectedOrg = (Organization)this.agentJComboBox.getSelectedItem();
        this.employeeComboBox.removeAllItems();
        for(P tempperson: selectedOrg.getPersonDirectory().getPersonDir()) {
            Person p = (Person)tempperson;
            employeeComboBox.addItem(p);
        }
    }
    
    public void populateComboBox() {
        agentJComboBox.removeAllItems();
        if(this.enterprise.getType() == EnterpriseType.Agent) {
            Agent agent = (Agent)this.enterprise;
            for(Organization org : agent.getOdir().getOrgDir()) {
                agentJComboBox.addItem(org);
            }
        }
        if(this.enterprise.getType() == EnterpriseType.FoodBank) {
            FoodBank foodbank = (FoodBank)this.enterprise;
            for(Organization org : foodbank.getOdir().getOrgDir()) {
                agentJComboBox.addItem(org);
            }
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable accountJTabel;
    private javax.swing.JComboBox agentJComboBox;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JComboBox<Object> employeeComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JLabel txtTitle;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
