/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.GovernmentRole;

import Business.Account.Account;
import Business.Account.Account.AccountStatus;
import Business.Business;
import Business.Enterprise.Government;
import Business.Network.Network;
import Business.Person.BenefitPerson;
import Business.Plan.Plan;
import Business.Request.Request;
import Business.Request.UserRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author zhaoxiaohan
 */
public class ManageBenefitPeopleJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageBenefitPeopleJPanel
     */
    private Business business;
    private JPanel userProcessContainer;
    private Government government;
    private Account account;
    private Plan plan;

    public ManageBenefitPeopleJPanel(Business business, JPanel userProcessContainer, Account account, Plan plan) {
        initComponents();
        this.business = business;
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.plan = plan;
        for (Network nwk : this.business.getNetworkList()) {
            if (nwk.getStateAccount() == this.account) {
                this.government = nwk.getGovernment();
                break;
            }
        }
        lbName.setText(plan.getName());
        populatePeopleTable();
    }

    public void populatePeopleTable() {
        DefaultTableModel model = (DefaultTableModel) tbPeople.getModel();

        model.setRowCount(0);

        for (Account ac : government.getAccountDirectory().getAccountCatalog()) {
            if (ac.getPerson() instanceof BenefitPerson) {
                if (ac.getStatus() == AccountStatus.Approved || ac.getStatus() == AccountStatus.Activate) {
                    BenefitPerson bp = (BenefitPerson) ac.getPerson();
                    if (bp.getPlanAssign() == plan) {
                        Object[] row = new Object[4];
                        row[0] = ac;
                        row[1] = bp.getName();
                        row[2] = bp.getSsn();
                        row[3] = bp.getIncome();
                        model.addRow(row);
                    }

                }
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbName = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPeople = new javax.swing.JTable();
        btnRevoke = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        lbName.setText("Plan Name");

        tbPeople.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Username", "Name", "Ssn", "Income"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbPeople);

        btnRevoke.setText("Revoke");
        btnRevoke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRevokeActionPerformed(evt);
            }
        });

        btnBack.setText("<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRevoke))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbName)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lbName)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRevoke)
                    .addComponent(btnBack))
                .addContainerGap(152, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRevokeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRevokeActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbPeople.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select one row from table");
            return;
        }
        Account selectedAc = (Account) this.tbPeople.getValueAt(selectedRow, 0);
        selectedAc.setStatus(AccountStatus.Denied);
        this.populatePeopleTable();
    }//GEN-LAST:event_btnRevokeActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRevoke;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbName;
    private javax.swing.JTable tbPeople;
    // End of variables declaration//GEN-END:variables
}
