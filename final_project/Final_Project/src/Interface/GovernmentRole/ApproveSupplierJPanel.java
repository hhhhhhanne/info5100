/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.GovernmentRole;

import Business.Account.Account;
import Business.Business;
import Business.Enterprise.Government;
import Business.Network.Network;
import Business.Request.Request;
import Business.Request.SupplierRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author liaoqian
 */
public class ApproveSupplierJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ApproveSupplierJPanel
     */
    private JPanel userProcessContainer;
    private Business business;
    private Account account;
    private Government government = null;

    public ApproveSupplierJPanel(JPanel userProcessContainer, Account account,  Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.business = business;
        
        for(Network nwk: this.business.getNetworkList()) {
            if(nwk.getStateAccount() == this.account) {
                this.government = nwk.getGovernment();
                break;
            }
        }
        populateTable();
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) supreqTable.getModel();

        model.setRowCount(0);
        for (Request req : this.government.getSupplierRequestList().getRequestList()) {
            SupplierRequest ureq = (SupplierRequest)req;
             if(ureq.getStatus().equals("Processing")) {
           
                Object[] row = new Object[3];
                row[0] = ureq;
                row[1]=  ureq.getSupplier();
                row[2] = ureq.getStatus();
                model.addRow(row);
             }
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        supreqTable = new javax.swing.JTable();
        btnApprove = new javax.swing.JButton();
        btnDeny = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        jLabel1.setText("Manage Supplier Apply");

        supreqTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Request ID", "Supplier Name", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(supreqTable);
        if (supreqTable.getColumnModel().getColumnCount() > 0) {
            supreqTable.getColumnModel().getColumn(0).setResizable(false);
            supreqTable.getColumnModel().getColumn(1).setResizable(false);
            supreqTable.getColumnModel().getColumn(2).setResizable(false);
        }

        btnApprove.setText("Approve");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });

        btnDeny.setText("Deny");
        btnDeny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDenyActionPerformed(evt);
            }
        });

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(172, 172, 172)
                            .addComponent(btnApprove, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDeny, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(32, 32, 32)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnBack)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnApprove)
                            .addComponent(btnDeny))))
                .addGap(71, 71, 71)
                .addComponent(btnBack)
                .addContainerGap(42, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        int selectedRow = supreqTable.getSelectedRow();
        if(selectedRow< 0) {
            JOptionPane.showMessageDialog(null, "Please select one Request from table", "Warning", JOptionPane.ERROR_MESSAGE);
            return ;
        }
        SupplierRequest supreq = (SupplierRequest)supreqTable.getValueAt(selectedRow, 0);
        supreq.setStatus("Approved");
        supreq.getAccount().setStatus(Account.AccountStatus.Approved);
        JOptionPane.showMessageDialog(null, "application approved");

        populateTable();
    }//GEN-LAST:event_btnApproveActionPerformed

    private void btnDenyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDenyActionPerformed
        int selectedRow = supreqTable.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select one Request from table", "Warning", JOptionPane.ERROR_MESSAGE);
            return ;
        }
        SupplierRequest supreq= ( SupplierRequest)supreqTable.getValueAt(selectedRow, 0);
        supreq.setStatus("Denied");
        supreq.getAccount().setStatus(Account.AccountStatus.Denied);
        JOptionPane.showMessageDialog(null, "application denied");
        populateTable();
    }//GEN-LAST:event_btnDenyActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeny;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable supreqTable;
    // End of variables declaration//GEN-END:variables
}
