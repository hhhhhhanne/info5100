/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.GovernmentRole;

import Business.Account.Account;
import Business.Account.Account.AccountStatus;
import Business.Business;
import Business.Enterprise.Government;
import Business.Network.Network;
import Business.Person.BenefitPerson;
import Business.Plan.Plan;
import Business.Request.Request;
import Business.Request.UserRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chance
 */
public class ApproveApplicationJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Business business;
    private Account account;
    private Government government = null;
    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public ApproveApplicationJPanel(JPanel userProcessContainer, Account account,  Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.business = business;
        
        for(Network nwk: this.business.getNetworkList()) {
            if(nwk.getStateAccount() == this.account) {
                this.government = nwk.getGovernment();
                break;
            }
        }
        this.populateRequestTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableRequest = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnApprove = new javax.swing.JButton();
        btnDeny = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(600, 400));

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel1.setText("Benefit Application Management");

        tableRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Income", "Plan"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Float.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableRequest);

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jButton1.setText("Application Details");
        jButton1.setEnabled(false);

        btnApprove.setText("Approve");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });

        btnDeny.setBackground(new java.awt.Color(255, 153, 153));
        btnDeny.setText("Deny");
        btnDeny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDenyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(btnBack))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnApprove, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeny, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btnApprove)
                    .addComponent(btnDeny))
                .addGap(26, 26, 26)
                .addComponent(btnBack)
                .addContainerGap(115, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        int index = this.tableRequest.getSelectedRow();
        if(index < 0) {
            JOptionPane.showMessageDialog(null, "Please select one Request from table", "Warning", JOptionPane.ERROR_MESSAGE);
            return ;
        }
        Plan plan = (Plan)tableRequest.getValueAt(index, 3);
        UserRequest userreq = (UserRequest)tableRequest.getValueAt(index, 0);
        userreq.setStatus("Approved");
        BenefitPerson bp = (BenefitPerson)userreq.getAccount().getPerson();
        bp.setPlanAssign(plan);
        bp.setIncome(userreq.getIncome());
        userreq.getAccount().setStatus(AccountStatus.Approved);

        this.populateRequestTable();
    }//GEN-LAST:event_btnApproveActionPerformed

    private void btnDenyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDenyActionPerformed
        int index = this.tableRequest.getSelectedRow();
        if(index < 0) {
            JOptionPane.showMessageDialog(null, "Please select one Request from table", "Warning", JOptionPane.ERROR_MESSAGE);
            return ;
        }
        UserRequest userreq = (UserRequest)tableRequest.getValueAt(index, 0);
        userreq.setStatus("Denied");
        userreq.getAccount().setStatus(AccountStatus.Denied);
        this.populateRequestTable();
    }//GEN-LAST:event_btnDenyActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) tableRequest.getModel();

        model.setRowCount(0);
        for (Request req : government.getUserRequestList().getRequestList()) {
            UserRequest ureq = (UserRequest)req;
            if(ureq.getStatus() == "Processing") {
                Object[] row = new Object[4];
                row[0] = ureq;
                row[1] = ureq.getAccount().getPerson().getName();
                row[2] = ureq.getIncome();
                row[3] = ureq.getPlanexpect();
                model.addRow(row);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeny;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableRequest;
    // End of variables declaration//GEN-END:variables
}
