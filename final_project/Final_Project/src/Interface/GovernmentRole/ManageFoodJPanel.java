/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.GovernmentRole;

import Business.Account.Account;
import Business.Business;
import Business.Enterprise.Enterprise;
import Business.Enterprise.Government;
import Business.Food.Food;
import Business.Network.Network;
import java.awt.CardLayout;
import static java.lang.Float.parseFloat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author a
 */
public class ManageFoodJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageFoodJPanel
     */
    private JPanel userProcessContainer;
    private Business business;
    private Government government = null;
    private Account account;
    public ManageFoodJPanel(JPanel userProcessContainer, Account account, Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.account = account;
        for(Network nwk: this.business.getNetworkList()) {
            if(nwk.getStateAccount() == this.account) {
                this.government = nwk.getGovernment();
                break;
            }
        }
        populateTable();
    }
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) foodtable.getModel();
        
        model.setRowCount(0);

        for (Food food: this.business.getFoodCatalog()){
            Object[] row = new Object[2];
            row[0] = food;
            row[1] = food.getPrice();
            model.addRow(row);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        suplabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        foodtable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        btnadd = new javax.swing.JButton();
        btnde = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtfood = new javax.swing.JTextField();
        txtprice = new javax.swing.JTextField();

        suplabel.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        suplabel.setText("Manage Supplier FoodList");

        foodtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Food", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(foodtable);
        if (foodtable.getColumnModel().getColumnCount() > 0) {
            foodtable.getColumnModel().getColumn(0).setResizable(false);
            foodtable.getColumnModel().getColumn(1).setResizable(false);
        }

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        btnadd.setText("Add to List");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        btnde.setText("Remove from List");
        btnde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeActionPerformed(evt);
            }
        });

        jLabel1.setText("Food Name:");

        jLabel2.setText("Food Price:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(suplabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(backJButton)
                                        .addGap(49, 49, 49)
                                        .addComponent(btnadd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtprice, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(53, 53, 53)
                                        .addComponent(txtfood, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnde)))))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(suplabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtfood, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(btnadd)
                    .addComponent(btnde))
                .addContainerGap(23, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        // TODO add your handling code here:
        String name=txtfood.getText();
        try {
            float price=parseFloat(txtprice.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "please input true price");
            return;
        }
        float price=parseFloat(txtprice.getText());
        if (price<=0) {
            JOptionPane.showMessageDialog(null, "price should be >= 0");
        }
        for(Food f:this.business.getFoodCatalog()){
            if (f.getName().equalsIgnoreCase(name)) {
                JOptionPane.showMessageDialog(null, "this food exists");
                return;
            }
        }
        Food food = this.business.AddfoodtoFoodList();
        food.setName(name);
        food.setPrice(price);
        populateTable();
        JOptionPane.showMessageDialog(null, "add");
    }//GEN-LAST:event_btnaddActionPerformed

    private void btndeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeActionPerformed
        // TODO add your handling code here:
        int selectedRow=foodtable.getSelectedRow();
        if(selectedRow>=0)
        {
            Food fo=(Food)foodtable.getValueAt(selectedRow, 0);
            this.business.deletefoodfromList(fo);
            populateTable();
        }
        else{JOptionPane.showMessageDialog(null, "please select a row");}
    }//GEN-LAST:event_btndeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnde;
    private javax.swing.JTable foodtable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel suplabel;
    private javax.swing.JTextField txtfood;
    private javax.swing.JTextField txtprice;
    // End of variables declaration//GEN-END:variables
}
