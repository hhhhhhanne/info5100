/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.InventoryRole;

import Business.Business;
import Business.Enterprise.Enterprise;
import Business.Enterprise.Government;
import Business.Enterprise.Supplier;
import Business.Food.Food;
import Business.Food.FoodInventory;
import Business.Network.Network;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author zhaoxiaohan
 */
public class AddInventoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddInventoryJPanel
     */
    private JPanel userProcessContainer;
    private Supplier supplier;
    private Government government;
    private Business business;
    public AddInventoryJPanel(JPanel userProcessContainer,Enterprise enterprise,Government government,Business business) {
        initComponents();
        this.userProcessContainer= userProcessContainer;
        this.supplier = (Supplier)enterprise;
        this.government = government;
        this.business = business;
        
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(false);
        populateComb();
        populateInventory();
        
        this.tblin.getSelectionModel().addListSelectionListener(
                new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                // do some actions here, for example
                if (tblin.getSelectedRow() > -1){
                    tableListener();
                }
            }
        });
    }

    public void populateInventory(){
        DefaultTableModel model = (DefaultTableModel) tblin.getModel();
        
        model.setRowCount(0);
        for(FoodInventory inventory : supplier.getInventoryList()){
            Object[] row = new Object[3];
            row[0] = inventory;
            row[1] = inventory.getFood().getPrice();
            row[2] = inventory.getQuantity();
            
            model.addRow(row);
        }
    }
    public void populateComb(){
        foodComb.removeAllItems();
        for(Food food: this.business.getFoodCatalog()){
            foodComb.addItem(food);
        }
    }
    
    public void tableListener() {
        FoodInventory fi = (FoodInventory) tblin.getValueAt(tblin.getSelectedRow(), 0);
        if (fi!=null) {
            btnUpdate.setEnabled(true);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblin = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        foodComb = new javax.swing.JComboBox();
        btnBack = new javax.swing.JButton();
        txtQuan = new javax.swing.JTextField();
        txtNewQuan = new javax.swing.JTextField();

        jLabel2.setText("Food");

        jLabel3.setText("Quantity");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        tblin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Food name", "Price", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblin);

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel5.setText("Quantity");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        foodComb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnBack.setText("<back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnAdd)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(foodComb, 0, 123, Short.MAX_VALUE)
                                            .addComponent(txtQuan))))
                                .addGap(71, 71, 71)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnUpdate)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnSave))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtNewQuan, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(btnBack)))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(btnBack)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(foodComb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNewQuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtQuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnSave))
                .addContainerGap(88, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        try {
            int q = Integer.parseInt(txtQuan.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "please input a real quantity");
            return;
        }
        if ((Integer.parseInt(txtQuan.getText()))<0) {
            JOptionPane.showMessageDialog(null, "please input a real quantity");
            return;
        }
        FoodInventory in = new FoodInventory();
        Food food = (Food)foodComb.getSelectedItem();
        in.setFood(food);
        in.setQuantity(Integer.parseInt(txtQuan.getText()));
        int addNum = in.getQuantity();

        if(supplier.searchInventory(food)==null){
            supplier.addInventory(in);
        }
        else{
            int oldNum = supplier.searchInventory(food).getQuantity();
            supplier.searchInventory(food).setQuantity(addNum+oldNum);
        }
        populateInventory();
        txtQuan.setText("");
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int i = tblin.getSelectedRow();
        if(i<0){
            JOptionPane.showMessageDialog(null, "please select a row");
            return;
        }
        FoodInventory inventory = (FoodInventory)tblin.getValueAt(i, 0);
        txtNewQuan.setText(String.valueOf(inventory.getQuantity()));
        btnSave.setEnabled(true);
        btnUpdate.setEnabled(false);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        int i = tblin.getSelectedRow();
        FoodInventory inventory = supplier.getInventoryList().get(i);
        try {
            int q = Integer.parseInt(txtNewQuan.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "please input a real quantity");
            return;
        }
        int q = Integer.parseInt(txtNewQuan.getText());
        if (q<0) {
            JOptionPane.showMessageDialog(null, "please input a real quantity");
            return;
        }
        inventory.setQuantity(q);
        populateInventory();
        btnUpdate.setEnabled(false);
        btnSave.setEnabled(false);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        InputInventoryJPanel msip = (InputInventoryJPanel) component;
        msip.populateSupplierInventoryTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox foodComb;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblin;
    private javax.swing.JTextField txtNewQuan;
    private javax.swing.JTextField txtQuan;
    // End of variables declaration//GEN-END:variables
}
